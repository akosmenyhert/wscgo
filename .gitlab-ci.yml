variables:
  REPO_NAME: gitlab.com/grill-tamasi.hu/wscgo
  GO111MODULE: "on"

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build
  - deploy

compile:rpizw:
  stage: build
  script:
    - go build -o $CI_PROJECT_DIR/wscgo-rpizw
  artifacts:
    paths:
      - wscgo-rpizw
  tags:
    - grill-tamasi
    - rpizw
    - golang

compile:opiz:
  stage: build
  script:
    - go get github.com/eclipse/paho.mqtt.golang
    - go get github.com/jacobsa/go-serial/serial
    - go get gopkg.in/ini.v1
    - go build -o $CI_PROJECT_DIR/wscgo-opiz
  artifacts:
    paths:
      - wscgo-opiz
  tags:
    - grill-tamasi
    - opiz
    - golang
    
deploy:opiz:
  stage: deploy
  dependencies: 
    - compile:opiz
  script:
    - curl --user repository:$DAV_PASS --anyauth -T $CI_PROJECT_DIR/wscgo-opiz $DAV_URL
  only:
    - master
  tags:
    - grill-tamasi

deploy:rpizw:
  stage: deploy
  dependencies: 
    - compile:rpizw
  script:
    - curl --user repository:$DAV_PASS --anyauth -T $CI_PROJECT_DIR/wscgo-rpizw $DAV_URL
  only:
    - master
  tags:
    - grill-tamasi
